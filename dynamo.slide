DynamoDB

* Origin

Amazon created Dynamo in response to a number of critical outages that occurred during the 2004 holiday shopping season.

.link http://www.allthingsdistributed.com/2012/01/amazon-dynamodb.html
.link http://www.allthingsdistributed.com/files/amazon-dynamo-sosp2007.pdf Dynamo Paper (2007)

.image history.png

* Timeline

.image timeline.png 500 800

* Key-Value


* Schema-less

.image schemaless.jpg

- item size limit 400KB
- no limit to the number of attributes


* Partitioning

Vertical partitioning

.image verticalPartitioning.png


* Partitioning

Horizontal partitioning

.image horizontalPartitioning.png


* Data Types

- Scalar – Number, String, Binary, Boolean, and Null
- Set – String Set, Number Set, and Binary Set
- Document – List and Map


* Primary Key

.image PartitionKey.png


* Indexes

.image lsi.jpg


* Indexes

.image gsi.jpg


* Read Consistency

.image cap.png 500 500


* Read Consistency

- Eventually Consistent Reads
- Strongly Consistent Reads

A strongly consistent read might not be available if there is a network delay or outage.

.link http://docs.aws.amazon.com/amazondynamodb/latest/developerguide/HowItWorks.ProvisionedThroughput.html Throughput Capacity for Reads and Writes

* Query and Scan

Query finds items based on primary key values.

Query filtering on non-key attributes
- CONTAINS, NOT_CONTAINS and BEGINS_WITH for string matching
- BETWEEN for range checking
- IN to check for membership in a set

Scan

- Maximum data set size limit of 1 MB
- Scan uses eventually consistent reads

use *LastEvaluatedKey* to detect pagination

: quick overview on AWS

* Table

.code scripts/table.js

* Create

.code scripts/create.js

* Read

.code scripts/read.js

* Update

.code scripts/update.js

* Delete

.code scripts/delete.js

* Condition Expression

.code scripts/condition.js

* Condition Expression

  attribute_not_exists(Id)

  (ProductCategory IN (:cat1, :cat2)) and (Price between :lo and :hi)


* Transaction

AWS SDK for Java
.link https://github.com/awslabs/dynamodb-transactions
    
* Works with Serverless

- HTTP(S)-based APIs
- API Gateway integration
- As Lambda event source (DynamoDB Streams)

* Import/Export

.link http://docs.aws.amazon.com/datapipeline/latest/DeveloperGuide/dp-importexport-ddb.html Import and Export DynamoDB Data Using AWS Data Pipeline

* New Features

  Dec 2013 - Global secondary index
  Oct 2014 - Map and list data types
  Oct 2014 - Increased item size limit to 400kb
  Jul 2015 - Streams
  Feb 2017 - TTL
  Jun 2017 - Auto Scaling
  Jun 2017 - Amazon DynamoDB Accelerator (DAX)
  Aug 2017 - VPC Endpoints

.link https://aws.amazon.com/blogs/aws/category/amazon-dynamo-db/


* TTL

Time To Live (TTL) for DynamoDB allows you to define when items in a table expire so that they can be automatically deleted from the database.

.image ttl.png 480 700

* DynamodDB Local

.link http://docs.aws.amazon.com/amazondynamodb/latest/developerguide/DynamoDBLocal.html#DynamoDBLocal.DownloadingAndRunning Download DynamoDB Local

* Social Reaction Project

- API Gateway + Lambda + DynamoDB
